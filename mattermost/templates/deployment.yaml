apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mattermost-team-edition.fullname" . }}
  labels:
    {{- include "mattermost-team-edition.labels" . | nindent 4 }}
spec:
  replicas: 2
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "mattermost-team-edition.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret-config.yaml") . | sha256sum }}
        {{- if .Values.extraPodAnnotations }}
        {{- .Values.extraPodAnnotations | toYaml | nindent 8 }}
        {{- end }}
      labels:
        {{- include "mattermost-team-edition.labels" . | nindent 8 }}
    spec:
      initContainers:
      {{- if not .Values.externalDB.enabled }}
      - name: "init-mysql"
        image: "{{ .Values.initContainerImage.repository }}:{{ .Values.initContainerImage.tag }}"
        imagePullPolicy: {{ .Values.initContainerImage.imagePullPolicy }}
        command: ["sh", "-c", "until curl --max-time 10 http://{{ .Release.Name }}-mysql:3306; do echo waiting for {{ .Release.Name }}-mysql; sleep 5; done;"]
        resources: {}
      {{- end }}
      {{- if .Values.extraInitContainers }}
      {{- .Values.extraInitContainers | toYaml | nindent 6 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        env:
          - name: NAMESPACE
            value: {{ .Release.Namespace }}
          - name: MM_CDN_DOMAIN
            value: {{ .Values.cdnDomain }}
          {{- with .Values.config.LinkedInSettings }}
          {{- if .Enable }}
          - name: MM_SSO_LINKEDIN_ID
            value: {{ .Id | default "" }}
          - name: MM_SSO_LINKEDIN_SECRET
            value: {{ .Secret | default "" }}
          {{- end }}
          {{- end }}
        {{- if .Values.extraEnvVars }}
          {{- .Values.extraEnvVars | toYaml | nindent 10 }}
        {{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.service.internalPort }}
          protocol: TCP
        - name: metrics
          containerPort: {{ .Values.service.metricsPort }}
          protocol: TCP
        - name: gossip
          containerPort: 8074
          protocol: TCP
        livenessProbe:
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
          httpGet:
            path: /api/v4/system/ping
            port: http
        readinessProbe:
          initialDelaySeconds: 2
          timeoutSeconds: 2
          periodSeconds: 2
          httpGet:
            path: /api/v4/system/ping
            port: http
        startupProbe:
          initialDelaySeconds: 1
          timeoutSeconds: 1
          periodSeconds: 1
          failureThreshold: 180
          httpGet:
            path: /api/v4/system/ping
            port: http
        volumeMounts:
        - mountPath: /mattermost/config/config.json
          name: config-json
          subPath: config.json
        - mountPath: /mattermost/data
          name: mattermost-data
        - mountPath: /mattermost/{{ trimPrefix "./" .Values.config.PluginSettings.Directory }}
          name: mattermost-plugins
        {{- if .Values.extraVolumeMounts -}}
        {{ .Values.extraVolumeMounts | toYaml | nindent 8 }}
        {{- end }}
        resources:
          {{- .Values.resources | toYaml | nindent 10 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ include "mattermost-team-edition.name" . | quote }}
                topologyKey: "kubernetes.io/hostname"
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- . | toYaml | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mattermost-team-edition.fullname" . }}
      volumes:
      {{- if .Values.extraVolumes -}}
      {{ .Values.extraVolumes | toYaml | nindent 6 }}
      {{- end }}
      - name: config-json
        secret:
          secretName: {{ include "mattermost-team-edition.fullname" . }}-config-json
      - name: config-json-rw
        emptyDir:
          medium: Memory
      - name: mattermost-data
      {{ if .Values.persistence.data.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.data.existingClaim | default (include "mattermost-team-edition.fullname" .) }}
      {{ else }}
        emptyDir: {}
      {{ end }}
      - name: mattermost-plugins
      {{ if .Values.persistence.plugins.enabled }}
        persistentVolumeClaim:
          {{ if .Values.persistence.plugins.existingClaim }}
          claimName: {{.Values.persistence.plugins.existingClaim }}
          {{ else }}
          claimName: {{ default (include "mattermost-team-edition.fullname" .) }}-plugins
          {{ end }}
      {{ else }}
        emptyDir: {}
      {{ end }}
