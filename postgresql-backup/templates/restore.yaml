{{- if .Values.restore }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "postgresql-backup.fullname" . }}-restore"
  namespace: {{ .Release.Namespace | quote }}
  labels: {{ include "postgresql-backup.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "postgresql-backup.serviceAccountName" . }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Never
      containers:
        - name: restore
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
            - restore.sh
          env:
            - name: POSTGRES_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ template "postgresql-backup.fullname" . }}
                  key: POSTGRES_DATABASE
            - name: POSTGRES_HOST
              value: {{ .Values.postgresql.host | quote }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgresql.port | quote }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "postgresql-backup.fullname" . }}
                  key: POSTGRES_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "postgresql-backup.fullname" . }}
                  key: PGPASSWORD
            - name: POSTGRES_EXTRA_OPTS
              value: {{ .Values.postgresql.extraArgs | quote }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "postgresql-backup.fullname" . }}
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "postgresql-backup.fullname" . }}
                  key: AWS_SECRET_ACCESS_KEY
            - name: S3_BUCKET
              value: {{ .Values.s3.bucket | quote }}
            - name: S3_PREFIX
              value: {{ trimSuffix "/" .Values.s3.prefix | quote }}
            - name: AWS_DEFAULT_REGION
              value: {{ .Values.s3.region | quote }}
            {{- if .Values.s3.endpoint }}
            - name: S3_ENDPOINT
              value: {{ printf "https://%s" (trimPrefix "https://" .Values.s3.endpoint) | quote }}
            {{- end }}
            - name: S3_S3V4
              value: {{ ternary "yes" "no" .Values.s3.v4signature | quote }}
            {{- if .Values.encryption.enabled }}
            - name: ENCRYPTION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "postgresql-backup.fullname" . }}
                  key: ENCRYPTION_PASSWORD
          {{- end }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          securityContext: {{- toYaml .Values.securityContext | nindent 12 }}
{{- end }}
