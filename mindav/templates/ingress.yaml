{{- if .Values.ingress.enabled -}}
{{- $fullName := include "mindav.fullname" . }}
{{- $svcPort := .Values.service.port }}
{{- if semverCompare "<1.14-0" .Capabilities.KubeVersion.GitVersion }}
apiVersion: extensions/v1beta1
{{- else if semverCompare "<1.19-0" .Capabilities.KubeVersion.GitVersion }}
apiVersion: networking.k8s.io/v1beta1
{{- else }}
apiVersion: networking.k8s.io/v1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "mindav.labels" . | nindent 4 }}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /v1/webdav/$1
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-URI-Prefix "https://{{ .Values.ingress.host.host }}/{{ .Values.ingress.host.path }}";
    {{- if .Values.oauth2proxy.enable }}
    nginx.ingress.kubernetes.io/auth-url: "https://{{ .Values.oauth2proxy.domain }}/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://{{ .Values.oauth2proxy.domain }}/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "X-Auth-Request-User"
    {{- end }}
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.host.host | quote }}
      http:
        paths:
          - path: "{{ .Values.ingress.host.path }}/(.*)"
            pathType: Exact
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
{{- end }}
