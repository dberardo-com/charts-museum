{{- if .Values.ingress.enabled -}}
{{- $fullName := include "website-web-nix.fullname" . -}}
{{- $svcName := .Values.service.name -}}
{{- $svcPort := .Values.service.port -}}
{{- if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "website-web-nix.labels" . | nindent 4 }}
  annotations:
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Authorization "Bearer {{ .Values.ingress.bearer }}";
      proxy_set_header Cookie "";
      proxy_hide_header Set-Cookie;
      if ($host = web.nix.co.il) {
        return 301 https://nix.co.il/;
      }
      location = / {
        add_header Set-Cookie "MMUSERID={{ .Values.ingress.fakeUserId }}; Path=/; Secure";
        add_header Set-Cookie "MMCSRF={{ .Values.ingress.fakeCsrf }}; Path=/; Secure";
        set $targetx '{{ .Values.ingress.defaultTarget }}';
        if ($arg_redirect_to ~* "^%2Fnix%2Fpl%2F(.+)$") {
          set $targetx $1;
          return 302 https://nix.co.il/nix/pl/$targetx;
        }
        return 302 https://nix.co.il/nix/pl/$targetx;
      }
      location = /blog/phantom {
        return 302 https://nix.co.il/nix/pl/a8mfohxyjbbyzd4xzkcjnnrhdy;
      }
      location ~ ^/api/v4/users$ {
        return 200 "[{\"id\":\"jpm573upfjr15xkddbi5en87ko\",\"create_at\":1604009326000,\"update_at\":1604010211924,\"delete_at\":0,\"username\":\"nix-website\",\"auth_data\":\"\",\"auth_service\":\"\",\"email\":\"\",\"nickname\":\"\",\"first_name\":\"\",\"last_name\":\"\",\"position\":\"\",\"roles\":\"system_user\",\"last_picture_update\":1604009326934,\"locale\":\"en\",\"timezone\":{\"automaticTimezone\":\"Asia/Jerusalem\",\"manualTimezone\":\"\",\"useAutomaticTimezone\":\"true\"},\"is_bot\":true,\"bot_description\":\"public website anonymous user - https://join.nix.co.il\"},{\"id\":\"5cmngiuzpbdhfe6h1pywjc7pyy\",\"create_at\":1601471823163,\"update_at\":1603656786821,\"delete_at\":0,\"username\":\"phantom\",\"auth_data\":\"\",\"auth_service\":\"\",\"email\":\"\",\"nickname\":\"PHANTOm\",\"first_name\":\"\",\"last_name\":\"\",\"position\":\"\",\"roles\":\"system_admin system_user\",\"last_picture_update\":1603141974322,\"locale\":\"en\",\"timezone\":{\"automaticTimezone\":\"Asia/Jerusalem\",\"manualTimezone\":\"\",\"useAutomaticTimezone\":\"true\"}},{\"id\":\"ia3q1aep4bdrtf8hy3hzkyzhba\",\"create_at\":1603014714661,\"update_at\":1604006996371,\"delete_at\":0,\"username\":\"x-bot\",\"auth_data\":\"\",\"auth_service\":\"\",\"email\":\"\",\"nickname\":\"X\",\"first_name\":\"\",\"last_name\":\"\",\"position\":\"\",\"roles\":\"system_user system_post_all\",\"last_picture_update\":1603141880698,\"locale\":\"en\",\"timezone\":{\"automaticTimezone\":\"Asia/Jerusalem\",\"manualTimezone\":\"\",\"useAutomaticTimezone\":\"true\"},\"is_bot\":true}]";
      }
      if ($request_method = POST) {
        set $post_marker x;
      }
      if ($request_uri = /api/v4/users/ids) {
        set $post_marker z$post_marker;
      }
      if ($request_uri = /api/v4/users/usernames) {
        set $post_marker z$post_marker;
      }
      if ($request_uri = /api/v4/roles/names) {
        set $post_marker z$post_marker;
      }
      if ($request_uri = /api/v4/channels/members/me/view) {
        set $post_marker z$post_marker;
      }
      if ($post_marker = x) {
        return 405;
      }
      if ($request_method = DELETE) {
        return 405;
      }
      if ($request_method = PUT) {
        return 405;
      }
spec:
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ . }}
            backend:
              serviceName: {{ $svcName }}
              servicePort: {{ $svcPort }}
          {{- end }}
    {{- end }}
  {{- end }}
